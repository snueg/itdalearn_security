import React, { useEffect, useState } from "react";
import { useNavigate } from "react-router-dom";
import { useDispatch, useSelector } from "react-redux";
import "../../styles/cart.css";
import { updateQuantity, removeCart, getDiscount, getTotalSum } from "../../store";
import { Button, Modal } from "react-bootstrap";

function Cart() {
    
    let navigate = useNavigate();
    let dispatch = useDispatch();
    let state = useSelector((state) => state);
    const [modalShow, setModalShow] = useState(false);
    const [totalSum, setTotalSum] = useState(0);
    const [couponCode, setCouponCode] = useState("");
    const [couponAlert, setCouponAlert] = useState(true);

    const getTotalPrice = () => {
        setTotalSum(state.cart.reduce((acc, item) => acc + item.price * item.quantity, 0));
        dispatch(getTotalSum(totalSum));
    };
    let discount = 1;

    // Ï¥ùÍ≥ÑÍ∞Ä ÎßàÏö¥Ìä∏ Îê† Îïå Î∞îÎ°ú Î≥¥Ïù¥Í≥†, ÏàòÎüâÎ≥ÄÍ≤ΩÎßàÎã§ ÏóÖÎç∞Ïù¥Ìä∏ ÏãúÌÇ§Îäî Ìï®Ïàò
    useEffect(() => {
        getTotalPrice();
    }, [state]);

    const removeCartItem = (id) => {
        dispatch(removeCart(id));
    };

    useEffect(() => {
        let couponEvent = setTimeout(() => {
            setCouponAlert(false);
        }, 2000);
        return () => {
            clearTimeout(couponEvent);
        };
    }, []);

    const checkCoupon = () => {
        const cartCouponCode = "a";
        if (couponCode === cartCouponCode) {
            alert(`${couponCode} 20% Ïø†Ìè∞Ïù¥ Ï†ÅÏö©Îê©ÎãàÎã§.`);
            discount = 0.8;
            dispatch(getDiscount(discount));
        } else if (couponCode === "") {
            alert("Îã§Ïãú ÏûÖÎ†•Ìï¥");
        } else {
            alert(`"${couponCode}"Îäî Ïú†Ìö®ÌïòÏßÄ ÏïäÏùÄ Ïø†Ìè∞ÏûÖÎãàÎã§`);
        }
        setCouponCode("");
    };

    // storeÎ•º ÌÜµÌïú ÏàòÎüâÎ≥ÄÍ≤Ω
    const changeCount = (e, i) => {
        const newQuantity = e.target.value < 0 ? 0 : e.target.value;
        dispatch(updateQuantity({ newQuantity, i }));
    };

    return (
        <div>
            {/* <Nav /> */}
            <section id="cart_title">
                <div className="cart_container">
                    Ïã†Ï≤≠ÌïòÍ∏∞
                    <br />
                    Step 1. Í∞ïÏùò ÏÑ†ÌÉù
                </div>
            </section>
            {/* Î™®Îã¨ ÏãúÏûë */}
            <Modal show={modalShow} backdrop="static" size="s" aria-labelledby="contained-modal-title-vcenter" centered>
            <div>
            <Modal.Body>
                <h4>Î°úÍ∑∏Ïù∏Ïù¥ ÌïÑÏöîÌï©ÎãàÎã§.</h4>
            </Modal.Body>
            <Modal.Footer>
                <Button
                    className="cart_redBtn" variant="outline-secondary"
                    onClick={() => setModalShow(false)}>
                    ÎÇòÍ∞ÄÍ∏∞
                </Button>
                <Button
                    className="cart_redBtn" variant="outline-danger"
                    onClick={() =>
                        navigate("/checkout", {
                            state: {
                                prevPage: "/checkout",
                            },
                        })
                    }
                >
                    
                    Î°úÍ∑∏Ïù∏ ÌïòÍ∏∞
                </Button>
            </Modal.Footer>
            </div>
        </Modal>
            {/* ÍπúÏßù Ïø†Ìè∞ */}
            {couponAlert === true && state.cart.length  ?  (
                <div onClick={() => alert("Ïø†Ìè∞ ÏΩîÎìú: a")} className="alert alert-warning">
                    üéäüéä ÍπúÏßù Ïø†Ìè∞ üéäüéä
                    <br /> 2Ï¥à ÎÇ¥ ÌÅ¥Î¶≠ Ïãú Ïø†Ìè∞ ÏΩîÎìú ÏßÄÍ∏â
                </div>
            ) : null}

            <section id="cart_content">
                <div className="cart_container cart_gridContainer">
                    <div className="cart_list">
                        {/* Ïû•Î∞îÍµ¨Îãà ÏïÑÏù¥ÌÖú Ïú†Î¨¥Ïóê Îî∞Î•∏ Ïû•Î∞îÍµ¨Îãà Ï∂úÎ†• ÏÑ§Í≥Ñ */}
                        {!state.cart.length ? (
                            <div className="no_contents">
                                <div>
                                    <p>‚ùó Í≥†Í∞ùÎãòÏùò Ïû•Î∞îÍµ¨ÎãàÍ∞Ä ÌòÑÏû¨ ÎπÑÏñ¥ÏûàÏäµÎãàÎã§.</p>
                                </div>
                                <p>
                                    <input
                                        className="cart_redBtn"
                                        type="button"
                                        onClick={() => {
                                            navigate("/class");
                                        }}
                                        value="ÏÉÅÏ†êÏúºÎ°ú ÎèåÏïÑÍ∞ÄÍ∏∞"
                                    />
                                </p>
                            </div>
                        ) : (
                            <form method="post">
                                <table className="cart_table">
                                    <thead id="cart_thead">
                                        <tr>
                                            <th>&nbsp;</th>
                                            <th>Í∞ïÏ¢å</th>
                                            <th>Í∞ÄÍ≤©</th>
                                            <th>Í∏∞Í∞Ñ (ÎÖÑ)</th>
                                            <th>Ï¥ùÌï©</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        {/* Ïû•Î∞îÍµ¨Îãà Î¶¨Ïä§Ìä∏ Ï∂úÎ†• ÏãúÏûë */}
                                        {state.cart.map((a, i) => (
                                            <tr key={state.cart[i].id}>
                                                <td>
                                                    <span className="cart_cancelBtn" onClick={() => removeCartItem(a.id)}>
                                                        X
                                                    </span>
                                                </td>
                                                <td>{state.cart[i].title}</td>
                                                <td className="cart_price">{state.cart[i].price?.toLocaleString()}‚Ç©</td>
                                                <td>
                                                    <input onChange={(e) => changeCount(e, i)} className="cart_input" type="number" value={state.cart[i].quantity} />
                                                </td>
                                                <td className="cart_price">{(state.cart[i].price * state.cart[i].quantity).toLocaleString()}‚Ç©</td>
                                            </tr>
                                        ))}
                                        <tr>
                                            <td id="cart_btn" colSpan="5">
                                                <div>
                                                    <input onChange={(e) => setCouponCode(e.target.value)} value={couponCode} className="cart_coupon" type="text" placeholder="Ïø†Ìè∞ ÏΩîÎìú" />
                                                    <input onClick={checkCoupon} id="cart_coupon_btn" type="button" value="Ïø†Ìè∞ Ï†ÅÏö©ÌïòÍ∏∞" />
                                                    {/* <input type="button"value="Í≥ÑÏÇ∞ÌïòÍ∏∞" onClick={getTotalPrice}/> */}
                                                </div>
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </form>
                        )}
                    </div>
                    {state.cart.length ? (
                        <div className="cart_total">
                            <div>
                                <h4>Ïã†Ï≤≠Ìï† Í∞ïÏ¢å Ìï©Í≥Ñ</h4>
                            </div>
                            <table className="cart_table total_table">
                                <tbody>
                                    <tr className="Cart_table_form">
                                        <td >ÏÜåÍ≥Ñ</td>
                                        <td style={state.checkout.discount !== 1 ? { textDecoration: "line-through" } : null} className="total_price">
                                            {totalSum.toLocaleString()}‚Ç©
                                        </td>
                                    </tr>
                                    {state.checkout.discount !== 1 ? (
                                        <tr className="Cart_table_form">
                                            <td>Ïø†Ìè∞ Ìï†Ïù∏ (20%)</td>
                                            <td className="coupon_discount">-{(totalSum * (1 - state.checkout.discount)).toLocaleString()}‚Ç©</td>
                                        </tr>
                                    ) : null}
                                    <tr className="Cart_table_form cart_total_price_border">
                                        <td>Ï¥ùÍ≥Ñ</td>
                                        <td className="total_price">{(totalSum * state.checkout.discount).toLocaleString()}‚Ç©</td>
                                    </tr>
                                </tbody>
                            </table>
                            <div>
                                {/* Í≤∞Ï†úÌéòÏù¥ÏßÄ Ïù¥Îèô */}
                                <input
                                    onClick={() => {
                                        {
                                            // navigate("/checkout") 
                                            setModalShow(true);
                                        }
                                        getTotalPrice();
                                    }}
                                    id="cart_process_btn"
                                    type="button"
                                    value="Í≤∞Ï†ú ÏßÑÌñâÌïòÍ∏∞"
                                />
                            </div>
                        </div>
                    ) : null}
                </div>
            </section>
        </div>
    );
}

export default Cart;
